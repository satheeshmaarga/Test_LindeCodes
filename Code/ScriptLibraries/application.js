//Executed during onload event of SearchProjects formfunction doSearchProjects() {	try {		if (document.forms[0].count.value==0){			document.getElementById('Tickets').style.display='none';		}		document.getElementById('findDoc').style.display='none';	} catch(e) {		alert("Problem in doSearchProjects");	}	};//To open a New Project Search formfunction newProjectSearch() {	try {		var ser = document.forms[0].Server_Name.value;		var db = document.forms[0].DBName.value;		location.href='http://'+ser +'/' + db +'/frmSearchProjects?openform';		} catch(e) {			alert("Problem in newProjectSearch");			}};//To do the searching on Projectsfunction findProjects() {	try {		document.getElementById('findDoc').click();	} catch(e) {		alert("Problem in findProjects");	}};//To do the searching on Ticketsfunction doSearchTickets() {	try {		if (document.forms[0].count.value==0){			document.getElementById('Tickets').style.display='none';		}		document.getElementById('findDoc').style.display='none';	} catch(e) {		alert("Problem in doSearchTickets");	}};//To open a New Ticket  Search formfunction NewTicketSearch() {	try {		var ser = document.forms[0].Server_Name.value;		var db = document.forms[0].DBName.value;		location.href='http://'+ser +'/' + db +'/frmSearchTickets?openform';	} catch(e) {		alert("Problem in NewTicketSearch");	}};//For enabling the web query save agentfunction findTickets() {	try {		document.getElementById('findDoc').click();	} catch(e){		alert("Problem in findTickets");	}};//Function used to update the selected project team members in the project documentfunction Update() {	try {//Project Manager updation		doPMUpdate();//TL Updation		doTLUpdate();//Developer Updation		doDLUpdate();//Tester updation		doTester();			doCR();		self.close();	} catch(e) {		alert("Problem in Update");	}};//Project Manager updationfunction doPMUpdate(){	try { 		var parWindow = window.opener;		newVal="";		valDis="";		buttonGroup=document.forms[0].projectManager;   		// returns the array number of the selected radio button or -1 if no button is selected   		if (buttonGroup[0]) {      		 for (var i=0; i<buttonGroup.length; i++) {         				if (buttonGroup[i].checked) {                				valDis =valDis +'<option>'+buttonGroup[i].value+'</option>';          					if (newVal)        						newVal =newVal + ","+ buttonGroup[i].value;                       					else         						newVal = buttonGroup[i].value;                            				}      		}   		}	    		if(valDis!=""){			parWindow.document.forms[0].projectManager.value=newVal;				parWindow.document.getElementById('disPM').innerHTML ='<select  class=\"select-XL\" name=\"disPM\" multiple >'+valDis+'</select>';		}	} catch(e) {		alert("Problem in doPMUpdate");	}};//CR function doCR(){	try { 		var parWindow = window.opener;		newVal="";		valDis="";		buttonGroup=document.forms[0].clientResp;   		// returns the array number of the selected radio button or -1 if no button is selected   		if (buttonGroup[0]) {      		 for (var i=0; i<buttonGroup.length; i++) {         				if (buttonGroup[i].checked) {                				valDis =valDis +'<option>'+buttonGroup[i].value+'</option>';          					if (newVal)        						newVal =newVal + ","+ buttonGroup[i].value;                       					else         						newVal = buttonGroup[i].value;                            				}      		}   		}	    				parWindow.document.forms[0].clientResp.value=newVal;				parWindow.document.getElementById('disCR').innerHTML ='<select  class=\"select-XL\" name=\"disCR\" multiple >'+valDis+'</select>';			} catch(e) {		alert("Problem in doCRUpdation");	}};//TL Updationfunction doTLUpdate(){	try {		var parWindow = window.opener;		newVal="";		valDis="";		buttonGroup=document.forms[0].TeamLeader;   		// returns the array number of the selected radio button or -1 if no button is selected   		if (buttonGroup[0]) {         		 for (var i=0; i<buttonGroup.length; i++) {         			if (buttonGroup[i].checked) {               				valDis =valDis +'<option>'+buttonGroup[i].value+'</option>';          				if (newVal)        					newVal =newVal +  ","+ buttonGroup[i].value;                       				else         					newVal = buttonGroup[i].value;                  			}      		}   		}    						parWindow.document.forms[0].TeamLeader.value=newVal;		parWindow.document.getElementById('disTL').innerHTML ='<select class=\"select-XL\" name=\"disTL\" multiple >'+valDis+'</select>';			} catch(e) {		alert("Problem in doTLUpdate");	}};//Developer Updationfunction doDLUpdate(){	try {		var parWindow = window.opener;		newVal="";		valDis="";				buttonGroup=document.forms[0].developers;   		// returns the array number of the selected radio button or -1 if no button is selected		if (buttonGroup[0]) {    			for (var i=0; i<buttonGroup.length; i++) {				if (buttonGroup[i].checked) {      					valDis =valDis +'<option>'+buttonGroup[i].value+'</option>';  					if (newVal)						newVal =newVal +  ","+ buttonGroup[i].value;               					else 						newVal = buttonGroup[i].value;            				}			}   		}    					parWindow.document.forms[0].developers.value=newVal;		parWindow.document.getElementById('disDL').innerHTML ='<select  class=\"select-XL\" name=\"disDL\" multiple >'+valDis+'</select>';		} catch(e) {		alert("Problem in doDLUpdate");	}};//Tester updationfunction doTester(){	try {		var parWindow = window.opener;		newVal="";		valDis="";		buttonGroup=document.forms[0].Tester;   		// returns the array number of the selected radio button or -1 if no button is selected		if (buttonGroup[0]) { 			for (var i=0; i<buttonGroup.length; i++) {				if (buttonGroup[i].checked) {      					valDis =valDis +'<option>'+buttonGroup[i].value+'</option>';     					if (newVal)						newVal =newVal +  ","+ buttonGroup[i].value;               					else 						newVal = buttonGroup[i].value;                    				}			}		}			parWindow.document.forms[0].Tester.value=newVal;			parWindow.document.getElementById('disTR').innerHTML ='<select class=\"select-XL\" name=\"disTR\" multiple >'+valDis+'</select>';			} catch(e) {		alert("Problem in doTester");	}};//Onload code for the Homepagefunction doLoadHome(){	try {		var query = document.forms[0].UNIDQuery.value;		var ser = document.forms[0].Server_Name.value;		var db = document.forms[0].DBName.value;		document.getElementById('SubConfig').style.display='none';		document.getElementById('SubTickets').style.display='block';		document.getElementById('SubProjects').style.display='none';		document.getElementById('SubReports').style.display='none';		document.getElementById('search').style.display='none';		if (query ==""){			//frames['IFrameName'].location.href='http://'+ser +'/' + db +'/webProjectDetails?OpenView';			//frames['IFrameName'].location.href='http://'+ser +'/' + db +'/JSONProject?OpenView';frames['IFrameName'].location.href='http://'+ser +'/' + db +'/vwUserTickets?OpenView';				} else			frames['IFrameName'].location.href='http://'+ser +'/' + db +'/vwUserTickets/'+query+'?OpenDocument';	} catch(e) {		alert("Problem in doLoadHome");	}	};//Navigation for the Main Menus in the homepage function submenu(item)     { 	try {		var ser = document.forms[0].Server_Name.value;		var db = document.forms[0].DBName.value;		switch (item) {		//Links for Home page		case 'home' : 			document.getElementById('SubConfig').style.display='none';			document.getElementById('SubTickets').style.display='block';			document.getElementById('SubProjects').style.display='none';			document.getElementById('SubReports').style.display='none';			document.getElementById('search').style.display='none';			frames['IFrameName'].location.href='http://'+ser +'/' + db +'/webProjectDetails?OpenView';			//frames['IFrameName'].location.href='http://'+ser +'/' + db +'/JSONProject?OpenView';		break;		case 'configuration' :			document.getElementById('SubConfig').style.display='block';			document.getElementById('SubTickets').style.display='none';			document.getElementById('SubProjects').style.display='none';			document.getElementById('SubReports').style.display='none';			document.getElementById('search').style.display='none';			var unid = document.forms[0].UNIDPreference.value;			frames['IFrameName'].location.href='http://'+ser +'/' + db +'/'+'(vwPreference)/' +unid+ '?OpenDocument';			document.getElementById('ContentPane').style.display='block';		break;		case 'Tickets' :			document.getElementById('SubConfig').style.display='none';			document.getElementById('SubTickets').style.display='block';			document.getElementById('SubProjects').style.display='none';			document.getElementById('SubReports').style.display='none';			document.getElementById('search').style.display='none';			frames['IFrameName'].location.href='http://'+ser +'/' + db +'/vwUserTickets?OpenView';			//frames['IFrameName'].location.href='http://'+ser +'/' + db +'/vwCatProjectCode?OpenView';						document.getElementById('ContentPane').style.display='block';		break;		case 'Projects' :			document.getElementById('SubConfig').style.display='none';			document.getElementById('SubTickets').style.display='none';			document.getElementById('SubProjects').style.display='block';			document.getElementById('SubReports').style.display='none';				document.getElementById('search').style.display='none';			frames['IFrameName'].location.href='http://'+ser +'/' + db +'/webProjectDetails?OpenView';			//frames['IFrameName'].location.href='http://'+ser +'/' + db +'/JSONProject?OpenView';			document.getElementById('ContentPane').style.display='block';		break;							case 'Reports' :			document.getElementById('SubConfig').style.display='none';			document.getElementById('SubTickets').style.display='none';			document.getElementById('SubProjects').style.display='none';			document.getElementById('SubReports').style.display='block';			document.getElementById('search').style.display='none';			frames['IFrameName'].location.href='http://'+ser +'/' + db +'/vwWebByResolvedTime?OpenView&CollapseView';			document.getElementById('ContentPane').style.display='block';		break;		case 'search' :			document.getElementById('SubConfig').style.display='none';			document.getElementById('SubTickets').style.display='none';			document.getElementById('SubProjects').style.display='none';			document.getElementById('SubReports').style.display='none';			document.getElementById('search').style.display='block';			frames['IFrameName'].location.href='http://'+ser +'/' + db +'/frmSearchTickets?openform';			document.getElementById('ContentPane').style.display='block';				break;					} 	} catch(e) {		alert("Problem in submenu");	}};//Navigaion for sub menus in the homepagefunction subLinks (item) {	try {		var ser = document.forms[0].Server_Name.value;		var db = document.forms[0].DBName.value;		switch (item) {					case 'all':			frames['IFrameName'].location.href='http://'+ser +'/' + db +'/vwUserTickets?OpenView';		break;					case 'ProjectName':					//frames['IFrameName'].location.href='http://'+ser +'/' + db +'/vwCatProjectCode?OpenView';			frames['IFrameName'].location.href='http://'+ser +'/' + db +'/vwUserTickets?OpenView';		break;					case 'requester':			frames['IFrameName'].location.href='http://'+ser +'/' + db +'/vwWebByRequester?OpenView&CollapseView';		break;			case 'status':			frames['IFrameName'].location.href='http://'+ser +'/' + db +'/vwWebByStatus?OpenView&CollapseView';		break;		case 'ResolvedTime':			frames['IFrameName'].location.href='http://'+ser +'/' + db +'/vwWebByResolvedTime?OpenView&CollapseView';		break;		case 'ClosedTime':			frames['IFrameName'].location.href='http://'+ser +'/' + db +'/vwWebByClosedTime?OpenView&CollapseView';		break;		case 'Assignee':			frames['IFrameName'].location.href='http://'+ser +'/' + db +'/vwWebByAssignee?OpenView&CollapseView';		break;		case 'month':			frames['IFrameName'].location.href='http://'+ser +'/' + db +'/vwWebByMonth?OpenView&CollapseView';		break;		case 'Date':			frames['IFrameName'].location.href='http://'+ser +'/' + db +'/vwWebByDate?OpenView&CollapseView';			break;		case 'Tickets':			frames['IFrameName'].location.href='http://'+ser +'/' + db +'/vwuserTickets?OpenView';		break;		case 'NewProject'  :			frames['IFrameName'].location.href='http://'+ser +'/' + db +'/frmProjectDetails?OpenForm';		break;		case 'ViewProject' :			frames['IFrameName'].location.href='http://'+ser +'/' + db +'/webProjectDetails?OpenView';			//frames['IFrameName'].location.href='http://'+ser +'/' + db +'/JSONProject?OpenView';		break;		case 'Directory' :			frames['IFrameName'].location.href='http://'+ser+'/' + db +'/vwWebDir?OpenView';		break;		case 'catProj':			frames['IFrameName'].location.href='http://'+ser +'/' + db +'/vwCatProjectCode?OpenView';		break;		case 'catAll':			frames['IFrameName'].location.href='http://'+ser +'/' + db +'/vwUserTickets?OpenView';		break;		case 'Preference' :			var unid = document.forms[0].UNIDPreference.value;			frames['IFrameName'].location.href='http://'+ser +'/' + db +'/'+'(vwPreference)/' +unid+ '?OpenDocument';		break;		case 'ProjMr' :				frames['IFrameName'].location.href='http://'+ser +'/' + db +'/vwWebByPM?OpenView';		break;		case 'searchProjects' :			frames['IFrameName'].location.href='http://'+ser +'/' + db +'/frmSearchProjects?OpenForm';		break;		case 'searchTickets' :			frames['IFrameName'].location.href='http://'+ser +'/' + db +'/frmSearchTickets?OpenForm';		break;		case 'NewTicket' :			var ser = document.forms[0].Server_Name.value;			var dbPath = document.forms[0].DBName.value;			window.open("http://" + ser + "/" + dbPath + "/webSelectProject?OpenView","viewKeywordSelect","status=yes,menubar=no,scrollbars=yes,resizable=No,top = 20, width=400,height=400");  			break;		}	} catch(e) {		alert("Problem in sublinks");	}};// Get tha handle of the selected personsfunction getSelectedPersons(){	try {		var ser = document.forms[0].Server_Name.value;		var db = document.forms[0].DBName.value;		var parWindow = window.opener; 		var txtSelectedValuesObj = document.forms[0].selPersons; 	 	var selectedArray = new Array();  		var selObj = document.getElementById('selPersons');  		var i; 	 	var count = 0;  		for (i=0; i<selObj.options.length; i++) {    			if (selObj.options[i].selected) {       			 selectedArray[count] = selObj.options[i].text;      			count++;    			}  		}	 	if (selectedArray.length==0) 			alert("Select the persons") 		else { 			document.forms[0].importName.value= selectedArray; 			 			document.forms[0].submit();				parWindow.location.href='http://'+ser +'/' + db +'/'+'vwWebDir?OpenView';   			self.close();  		} 	} catch(e) { 		alert("Problem in getSelectedPersons"); 	}};/** * DHTML date validation script. Courtesy of SmartWebby.com (http://www.smartwebby.com/dhtml/) */// Declaring valid date character, minimum year and maximum yearvar dtCh= "/";var minYear=1900;var maxYear=2100;function isInteger(s){	var i;    for (i = 0; i < s.length; i++){           // Check that current character is number.        var c = s.charAt(i);        if (((c < "0") || (c > "9"))) return false;    }    // All characters are numbers.    return true;}function stripCharsInBag(s, bag){	var i;    var returnString = "";    // Search through string's characters one by one.    // If character is not in bag, append to returnString.    for (i = 0; i < s.length; i++){           var c = s.charAt(i);        if (bag.indexOf(c) == -1) returnString += c;    }    return returnString;}function daysInFebruary (year){	// February has 29 days in any year evenly divisible by four,    // EXCEPT for centurial years which are not also divisible by 400.    return (((year % 4 == 0) && ( (!(year % 100 == 0)) || (year % 400 == 0))) ? 29 : 28 );}function DaysArray(n) {	for (var i = 1; i <= n; i++) {		this[i] = 31		if (i==4 || i==6 || i==9 || i==11) {this[i] = 30}		if (i==2) {this[i] = 29}   }    return this}function isDate(dtStr){	var daysInMonth = DaysArray(12)	var pos1=dtStr.indexOf(dtCh)	var pos2=dtStr.indexOf(dtCh,pos1+1)	var strMonth=dtStr.substring(0,pos1)	var strDay=dtStr.substring(pos1+1,pos2)	var strYear=dtStr.substring(pos2+1)	strYr=strYear	if (strDay.charAt(0)=="0" && strDay.length>1) strDay=strDay.substring(1)	if (strMonth.charAt(0)=="0" && strMonth.length>1) strMonth=strMonth.substring(1)	for (var i = 1; i <= 3; i++) {		if (strYr.charAt(0)=="0" && strYr.length>1) strYr=strYr.substring(1)	}	month=parseInt(strMonth)	day=parseInt(strDay)	year=parseInt(strYr)	if (pos1==-1 || pos2==-1){		alert("The date format should be : mm/dd/yyyy")		return false	}	if (strMonth.length<1 || month<1 || month>12){		alert("Please enter a valid month")		return false	}	if (strDay.length<1 || day<1 || day>31 || (month==2 && day>daysInFebruary(year)) || day > daysInMonth[month]){		alert("Please enter a valid day")		return false	}	if (strYear.length != 4 || year==0 || year<minYear || year>maxYear){		alert("Please enter a valid 4 digit year between "+minYear+" and "+maxYear)		return false	}	if (dtStr.indexOf(dtCh,pos2+1)!=-1 || isInteger(stripCharsInBag(dtStr, dtCh))==false){		alert("Please enter a valid date")		return false	}return true}